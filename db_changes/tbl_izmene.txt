/* Table hmlg.izmene */
DROP TABLE IF EXISTS hmlg.izmene CASCADE;
-- Table hmlg.izmene
CREATE TABLE hmlg.izmene
(
  izm_id INTEGER NOT NULL,
  izm_tbl CHARACTER VARYING(20) NOT NULL,
  izm_oper CHARACTER VARYING(20) NOT NULL,
  izm_opis CHARACTER VARYING(100) NOT NULL,
  izm_user CHARACTER VARYING(20) NOT NULL,
  izm_vreme CHARACTER VARYING(20) NOT NULL DEFAULT TO_CHAR(CURRENT_TIMESTAMP,'YYYY-MM-DD hh:mm:ss')
) WITH (autovacuum_enabled=true);

-- Comments on table hmlg.izmene
COMMENT ON TABLE hmlg.izmene IS 'Izmene';
COMMENT ON COLUMN hmlg.izmene.izm_id IS 'ID izmene';
COMMENT ON COLUMN hmlg.izmene.izm_tbl IS 'Naziv izmenjene tabele';
COMMENT ON COLUMN hmlg.izmene.izm_oper IS 'Operacija';
COMMENT ON COLUMN hmlg.izmene.izm_user IS 'Username';
COMMENT ON COLUMN hmlg.izmene.izm_vreme IS 'Vreme';

-- Primary key on table hmlg.izmene
ALTER TABLE hmlg.izmene ADD CONSTRAINT izm_pk PRIMARY KEY (izm_id);

COMMIT; 



-- FUNCTION hmlg.f_izmene_i(character varying)
DROP FUNCTION IF EXISTS hmlg.f_izmene_i(character varying) CASCADE;
CREATE OR REPLACE
FUNCTION hmlg.f_izmene_i(
                        pc_rec character varying
                       )
  RETURNS integer AS
$$
DECLARE

  vn_t_id INTEGER := 0;
  vn_res_rc INTEGER := 0;

BEGIN

  SELECT COALESCE(MAX(t.izm_id), 0)+1 AS izm_id
    INTO vn_t_id
    FROM hmlg.izmene t;

  INSERT INTO hmlg.izmene (izm_id, izm_tbl, izm_oper, izm_opis, izm_user)
    SELECT vn_t_id AS izm_id,
           r.izm_tbl,
           r.izm_oper, 
           r.izm_opis, 
           r.izm_user
      FROM JSON_POPULATE_RECORD(NULL::hmlg.izmene, pc_rec::JSON) r;
  GET DIAGNOSTICS vn_res_rc=ROW_COUNT;
  RAISE INFO '%', 'Red je uspešno dodat.';

  RETURN vn_t_id;

EXCEPTION

  WHEN unique_violation THEN
    IF regexp_match(sqlerrm, 'gr_pk', 'i') IS NOT NULL THEN
      RAISE unique_violation USING MESSAGE = 'Takav ID emisije već postoji!';
    ELSE
      RAISE EXCEPTION 'Nemamo pojma šta se dešava % %!', sqlerrm, sqlstate;
    END IF;
  WHEN OTHERS THEN
    RAISE;

END;
$$
  LANGUAGE 'plpgsql';
ALTER FUNCTION hmlg.f_izmene_i(character varying) OWNER TO postgres;



-- FUNCTION hmlg.f_izmene_g(character varying)
DROP FUNCTION IF EXISTS hmlg.f_izmene_g(character varying) CASCADE;
CREATE OR REPLACE
FUNCTION hmlg.f_izmene_g(pc_rec character varying DEFAULT NULL::character varying)
  RETURNS SETOF hmlg.izmene AS
$$
DECLARE

  r_rec record;
  j_rec json := coalesce(pc_rec, '{}')::json;
  vi_limit integer := coalesce(json_extract_path_text(j_rec, 'limit')::integer, 100);
  vi_offset integer := coalesce(json_extract_path_text(j_rec, 'offset')::integer, 0);


BEGIN

  FOR r_rec IN SELECT t.*
                   FROM hmlg.izmene t
                      CROSS JOIN (SELECT r.* from json_populate_record(null::hmlg.izmene, j_rec) r) j
                   WHERE public.f_compc(t.izm_tbl, j.izm_tbl)
                     AND public.f_compc(t.izm_oper, j.izm_oper)
                     AND public.f_compc(t.izm_opis, j.izm_opis)
                     AND public.f_compc(t.izm_user, j.izm_user)
                     AND public.f_compc(t.izm_vreme, j.izm_vreme)
                   ORDER BY t.izm_vreme::date DESC
                   LIMIT vi_limit OFFSET vi_offset LOOP

    RETURN NEXT r_rec;
  END LOOP;

EXCEPTION
  WHEN OTHERS THEN
    NULL;

END;
$$
  LANGUAGE 'plpgsql';
ALTER FUNCTION hmlg.f_izmene_g(character varying) OWNER TO postgres; 


-- INSERT ZA PREGLED IZMENA
insert into adm.adm_forma (afo_id, afo_naziv, afo_tabele, afo_izvestaji, aap_id) VALUES(440, "Pregled izmena", '{"title":"Izmene","source":"izmene","details":[],"actions":["v"]}', '{}', 30 );

-- UPDATE ZA REPORTE
update adm.adm_forma SET afo_izvestaji = '[{"title":"Nalaz o neusaglašenosti","report":"neusaglasenost","parameters":{"pi_pr_id":"pr_id"}},{"title":"Zapisnik o ispitivanju vozila","report":"zapisnik","parameters":{"pi_pr_id":"pr_id","pc_vzpv_oznaka":"vzpv_oznaka"}}]' WHERE afo_id = 430;
UPDATE 1
update adm.adm_forma SET afo_izvestaji = '[{"title":"Potvrda o tehničkim karakteristikama vozila","report":"potvrda_b","parameters":{"pi_pr_id":"pr_id"}}]' WHERE afo_id = 415;      